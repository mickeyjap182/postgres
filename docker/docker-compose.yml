# Use postgres/example user/password credential
version: "3.1"
services:
  pgtest01-primary:
    image: postgres:12
    container_name: "pgtest01-primary"
    env_file:
      - ./01/pg_env.env
    ports:
      - "30001:5432"
    volumes:
      - ./01/tmp:/var/lib/postgresql/data
      - ./01/logs:/var/log
      - ./01/init:/docker-entrypoint-initdb.d
    networks:
      - cluster_netw
  pgtest02-replica:
    image: postgres:12
    container_name: "pgtest02-replica"
    depends_on:
      - pgtest01-primary
    env_file:
      - ./02/pg_env.env
    ports:
      - "30002:5432"
    volumes:
      - ./02/tmp:/var/lib/postgresql/data
      - ./02/logs:/var/log
      - ./02/init:/docker-entrypoint-initdb.d
    networks:
      - cluster_netw
  pgtest03-replica:
    image: postgres:12
    container_name: "pgtest03-replica"
    depends_on:
      - pgtest01-primary
    env_file:
      - ./03/pg_env.env
    ports:
      - "30003:5432"
    volumes:
      - ./03/tmp:/var/lib/postgresql/data
      - ./03/logs:/var/log
      - ./03/init:/docker-entrypoint-initdb.d
    networks:
      - cluster_netw
  pgtest04-remote:
    image: postgres:12
    container_name: "pgtest04-remote"
    depends_on:
      - pgtest01-primary
    env_file:
      - ./04/pg_env.env
    ports:
      - "30004:5432"
    volumes:
      - ./04/tmp:/var/lib/postgresql/data
      - ./04/logs:/var/log
      - ./04/init:/docker-entrypoint-initdb.d
    networks:
      - cluster_netw
volumes:
  database:
    driver: local
networks:
  cluster_netw:
    driver: bridge
